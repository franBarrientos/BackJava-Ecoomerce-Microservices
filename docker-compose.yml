version: '3.8'
services:
  registry-discovery:
    container_name: id-eureka
    image: ecommerce/microservice-docker-eureka:0.0.1-SNAPSHOT
    ports:
      - 8761:8761
    environment:
       - JAVA_OPTS=
         -Xms256M
         -Xmx256M

 ##########################################################################
 #configuration service
 ##########################################################################
  configuration:
    container_name: id-config
    image: ecommerce/microservice-docker-configserver:0.0.1-SNAPSHOT
    volumes:
      - ./Enviroments:/tmp/config-server-repo
      #All projets will have a variable value  DEUREKA_SERVER this tell where find a registry-discovery server
    environment:
      - JAVA_OPTS=
         -Xms256M
         -Xmx256M
         -DEUREKA_SERVER=http://registry-discovery:8761/eureka/
         -DLOCAL_REPOSITORY=/tmp/config-server-repo
         #-Dspring.cloud.config.server.native.searchLocations=/var/config-data
    depends_on:
      - registry-discovery


 ##########################################################################
 #api-gateway service
 ##########################################################################
  api-gateway:
    container_name: id-gateway
    image: ecommerce/microservice-docker-apigateway:1.0-SNAPSHOT
    environment:
      - JAVA_OPTS=
         -Xms256M
         -Xmx256M
         -Dspring.cloud.config.enabled=false
         -DCORS_ORIGINS=http://localhost:80,http://localhost:3000,http://client-ms:80,http://client-ms:3000,*
         -DEUREKA_SERVER=http://registry-discovery:8761/eureka/
    depends_on:
      - registry-discovery
    ports:
      - 8085:8085

 ##########################################################################
 #administration service
 ##########################################################################
  administration:
    container_name: id-admin
    image: ecommerce/microservice-docker-adminserver:0.0.1-SNAPSHOT
      #All projets will have a variable value  DEUREKA_SERVER this tell where find a registry-discovery server
    environment:
      - JAVA_OPTS=
         -Xms256M
         -Xmx256M
         -Dspring.cloud.config.enabled=false
         -DEUREKA_SERVER=http://registry-discovery:8761/eureka/
         #-Dspring.cloud.config.server.native.searchLocations=/var/config-data
    depends_on:
      - registry-discovery
    ports:
      - 8083:8083

 ##########################################################################
 #product service
 ##########################################################################
  product-ms:
    container_name: bd-product-catalog
    image: ecommerce/microservice-docker-product:1.0-SNAPSHOT
    environment:
       - JAVA_OPTS=
         -Xms256M
         -Xmx256M
         -Dspring.cloud.bootstrap.enabled=true
         -DEUREKA_SERVER=http://registry-discovery:8761/eureka/
         #-DCONFIG_PROFILE=prod||dev

    depends_on:
      - registry-discovery
      - configuration

 ##########################################################################
 #user service
 ##########################################################################
  user-ms:
    container_name: bd-customer
    image: ecommerce/microservice-docker-user:1.0-SNAPSHOT
    environment:
      - JAVA_OPTS=
         -Xms256M
         -Xmx256M
         -Dspring.cloud.bootstrap.enabled=true
         -DEUREKA_SERVER=http://registry-discovery:8761/eureka/
         #-Dspring.profiles.active=development
         #-DCONFIG_PROFILE=prod||dev
    depends_on:
      - registry-discovery
      - configuration


 ##########################################################################
 #purchases service
 ##########################################################################
  purchases-ms:
    container_name: bd-transactions
    image: ecommerce/microservice-docker-purchase:1.0-SNAPSHOT
    environment:
      - JAVA_OPTS=
         -Xms256M
         -Xmx256M
         -Dspring.cloud.bootstrap.enabled=true
         -DEUREKA_SERVER=http://registry-discovery:8761/eureka/
         #-Dspring.profiles.active=development
         #-DCONFIG_PROFILE=prod||dev
    depends_on:
      - registry-discovery
      - configuration

 ##########################################################################
 #React client service
 ##########################################################################
  client-ms:
    container_name: bd-client
    entrypoint: /bin/sh
    image: node:alpine
    ports:
      - 3000:3000
    working_dir: /srv/app
    volumes:
      - ./Client/:/srv/app
    tty: true

 ##########################################################################
 #database service
 ##########################################################################
  # postgres_db:
  #   container_name: postgres
  #   image: postgres:latest
  #   ports:
  #       - 3432:5432
  #   volumes:
  #       #allow *.sql, *.sql.gz, or *.sh and is execute only if data directory is empty
  #       - ./dbfiles:/docker-entrypoint-initdb.d
  #       - /var/lib/postgres_data:/var/lib/postgresql/data
  #   environment:
  #       #default postgres super user
  #       POSTGRES_USER: postgres
  #        #default passwor for postgres super user, it is only the required envvar for postgres image
  #       POSTGRES_PASSWORD: qwerty
  #       #main database if name is not specific thname of super user is use
  #       POSTGRES_DB: postgres
 #
  ###########################################################################
  ##pgadmin service
  ###########################################################################
  # pgadmin4:
  #   image: dpage/pgadmin4
  #   restart: always
  #   environment:
  #     PGADMIN_DEFAULT_EMAIL: "admin@admin.com"
  #     PGADMIN_DEFAULT_PASSWORD: "qwerty"
  #   ports:
  #     - 80:80
  #   depends_on:
  #     - postgres_db
 #
 #

